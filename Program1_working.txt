0100 0407 # LDR R0 <- x07
0101 090C # STR R0 -> x0C
0102 2C28 # JNE R0 (I=1 x08 -> x0200)
0103 1F07 # SIR R3 7
0104 0B0A # STR R3 -> c(000A)
0105 070D # LDR R3 <- c(000D)
0106 F400 # IN R0
0107 1C0A # SIR R0 10
0108 2831 # JZ R0 to print \n
0109 180A # AIR R0 10
010A F801 # OUT R0
010B 1C0C # SIR R0 12
010C 1C0C # SIR R0 12
010D 1C0C # SIR R0 12
010E 1C0C # SIR R0 12
010F 080E # STR c(000E) <- R0
0110 040F # LDR R0 <- c(000F)
0111 0610 # LDR R2 <- c(0010)
0112 5080 # MUL R0 R2
0113 7CC8 # SRC RO 11 8
0114 6040 # ORR R0 R1
0115 080F # STR c(000F) <- R0
0116 050F # LDR R1 <- c(000F)
0117 110E # AMR R1 c(000E)
0118 090F # STR c(000F) <- R1
0119 3432 # JMA I=1 0012
011A 180A # AIR R0 10
011B F801 # OUT R0
011C 092D # STR I=1 c(000D) <- R1
011D 1B01 # AIR R3 1
011E 0B0D # STR c(000D) <- R3
011F 0407 # LDR R0 <- c(0007)
0120 1C01 # SIR R0 1
0121 0807 # STR R0 -> c(0007)
0122 0500 # LDR R1 <- c(0000)
0123 090F # STR R1 -> c(000F)
0124 2C33 # JNE R0 I=1 c(0013)
0125 040D # LDR R0 <- c(000D)
0126 1C15 # SIR RO 21
0127 080D # STR R0 -> c(000D)
0128 042D # LDR R0 <- I=1 c(000D)
0129 0715 # LDR R3 <- c(0015)
012A 1434 # SMR R0 I=1 c(0014)
012B 443A # JGE R0 I=1 c(001A)
012C 0616 # LDR R2 c(0016)
012D 5080 # MUL R0 R2
012E 7CC8 # SRC R0 11 0 8
012F 6040 # ORR R0 R1
0130 0817 # STR R0 -> c(0017)
0131 1717 # SMR R3 c(0017)
0132 473B # JGE R3 I=1 c(001B)
0133 343C # JMA I=1 c(001C)
0134 0717 # LDR R3 <- c(0017)
0135 0B15 # STR R3 -> c(0015)
0136 062D # LDR R2 <- c(000D) I=1
0137 0A19 # STR R2 -> c(0019)
0138 0718 # LDR R3 <- c(0018)
0139 1B01 # AIR R3 1
013A 0B18 # STR R3 -> c(0018)
013B 1F14 # SIR R3 20
013C 040D # LDR R0 <- c(000D)
013D 1801 # AIR R0 1
013E 080D # STR R0 -> c(000D)
013F 2F3D # JNE R3 I=1 c(001D)
0140 A84E # STX IX1 -> c(000E)
0141 070E # LDR R3 <- c(000E)
0142 0419 # LDR R0 <- c(0019)
0143 0610 # LDR R2 <- c(0010)
0144 5480 # DIV R0 R2
0145 0819 # STR R0 -> c(0019)
0146 090F # STR R1 -> c(000F)
0147 040E # LDR R0 <- c(000E)
0148 5080 # MUL R0 R2
0149 7CC8 # SRC R0 11 8
014A 6040 # ORR R0 R1
014B 100F # AMR R0 c(000F)
014C 080E # STR R0 -> c(000E)
014D 0419 # LDR R0 <- c(0019)
014E 1B01 # AIR R3 1
014F 2C3F # JNE R0 I=1 c(00IF)
0150 051F # LDR R1 <- c(001F)
0151 190F # AIR R1 14 
0152 091F # STR R1 -> c(001F)
0153 040E # LDR R0 <- c(000E)
0154 5480 # DIV R0 R2
0155 190C # AIR R1 12
0156 190C # AIR R1 12
0157 190C # AIR R1 12
0158 190C # AIR R1 12
0159 F901 # OUT R1 1
015A 080E # STR R0 -> c(000E)
015B 1F01 # SIR R3 1
015C 2F3F # JNE R3 I=1 c(001F)

0200 056A # LDR R1 <- (I=1 0x0A -> 0x0300+..) 
0201 F901 # OUT R1
0202 0609 # LDR R2 <- c(0x09)
0203 1A01 # AIR R2 1
0204 0A09 # STR R2 -> c(0x09)
0205 1E08 # SIR R2 8
0206 0A09 # STR R2 -> c(0x09)
0207 2A2B # JZ R2 I=1 0x0B   Jump if R2=0
0208 1A08 # AIR R2 8
0209 0A09 # STR R2 -> c(0x09)
020A 1B01 # AIR R3 1
020B 070A # LDR R3 <- c(000A)
020C 1B01 # AIR R3 1
020D 0B0A # STR R3 -> c(000A)
020E 3428 # JMA I=1 0x08

0300 0045 # E
0301 006E # n
0302 0074 # t
0303 0065 # e
0304 0072 # r
0305 0020 # space
0306 0023 # #
0307 000A # LF

0007 0015 # store value 21
0008 0200 # address to print seq
0009 0000 # indexing for looping through sequence
000A 0300 # address to sequence
000B 0103 # address of 103
000C 0000 # loop count (of 20)
000D 0400 # store address of 21 values
000E 0000 # temp variable 1 digits to number
000F 0000 # temp variable 2 digit count
0010 000A # for multiplying by 10
0011 011A # for jump statement while inputting, if \n encountered
0012 0106 # for JMA in input loop
0013 0100 # pointer to starting code
0014 0414 # pointer to x number(21st number)
0015 7FFF # closest difference
0016 FFFF # store -1
0017 0000 # store cal intermediate result
0018 0000 # loop count for cal 
0019 0000 # store closest number
001A 0130 # pointer to jge loop
001B 0134 # pointer to jge loop 2
001C 0138 # pointer to jma loop
001D 0128 # pointer to jne 
001F 0144 # pointer to loop for printing